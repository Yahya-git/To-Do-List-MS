version: "3.9"
services:
  gateway:
    container_name: gateway
    command:
      [
        sh,
        -c,
        pip install debugpy -t /tmp && python /tmp/debugpy --wait-for-client --listen 0.0.0.0:5678 -m uvicorn main:app --host 0.0.0.0 --port 8000 --reload,
      ]
    build:
      context: ./gateway
      dockerfile: Dockerfile
    env_file:
      - ./gateway/.env
    ports:
      - 8001:8000
      - 5678:5678
    networks:
      - todolistnetwork
    depends_on:
      - users
      - tasks
    volumes:
      - ./gateway:/app

  users:
    container_name: users
    build:
      context: ./users-service
      dockerfile: Dockerfile
    env_file:
      - ./users-service/.env
    command: bash -c "alembic upgrade head && uvicorn src.main:app --host 0.0.0.0 --reload --log-level debug"
    volumes:
      - ./users-service:/app
    restart: always
    networks:
      - todolistnetwork
    depends_on:
      postgres-db:
        condition: service_healthy

  tasks:
    container_name: tasks
    build:
      context: ./tasks-service
      dockerfile: Dockerfile
    env_file:
      - ./tasks-service/.env
    command: bash -c "alembic upgrade head && uvicorn src.main:app --host 0.0.0.0 --reload --log-level debug"
    volumes:
      - ./tasks-service:/app
    restart: always
    networks:
      - todolistnetwork
    depends_on:
      postgres-db:
        condition: service_healthy

  postgres-db:
    container_name: postgres-db
    image: postgres
    restart: always
    ports:
      - 5433:5432
    networks:
      - todolistnetwork
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
    healthcheck:
      test: pg_isready -U postgres -d users
      interval: 5s
      timeout: 3s
      retries: 5

  redis:
    image: redis
    restart: always
    ports:
      - 6380:6379
    networks:
      - todolistnetwork

networks:
  todolistnetwork:
    external: true
    name: todolistnetwork
